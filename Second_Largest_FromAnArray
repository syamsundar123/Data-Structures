//Naive Approach

class Test{
	public static void main(String args[]) {
		
		int arr[] = {5,20,12,20,10};
		int n = arr.length;
		int result = getSecondLargest(arr,n);
		System.out.println(arr[result]);
		
	}
	static int getLargest(int arr[],int n) {
		
		
		int largest = 0;
		for(int i = 1;i < n;i++) {
			
			if(arr[i]>arr[largest]) {
				largest = i;
			}
		}
		System.out.println(largest);
		
		return largest;
	}
	static int getSecondLargest(int arr[],int n) {
		int largest = getLargest(arr,n);
		int result = -1;
		for(int i = 0;i < n; i++) {
			if(arr[i] != arr[largest]) {
				if(result == -1) {
					result= i;
				}
				else if(arr[i]>arr[result]) {
					result = i;
				}
			}
		}
		
		return result;
		
	}
}


=================================================================================================================================================================================

//Efficient Approach

class Test{
	public static void main(String args[]) {
		
		int arr[] = {5,20,12,20,10};
		int n = arr.length;
		int result = getSecondLargest(arr,n);
		System.out.println(arr[result]);
		
	}
	
	static int getSecondLargest(int arr[],int n) {
		
		int result = -1,largest = 0;
		for(int i = 1;i < n; i++) {
			if(arr[i]>arr[largest]) {
				
				result = largest;
				largest = i;
			}
			else if(arr[i] != arr[largest]) {
				if(result == -1 || arr[i]>arr[result]) {
					result = i;
				}
			}
			
		}
		
		return result;
		
	}
}
